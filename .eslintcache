[{"E:\\react\\vio-chats\\src\\index.js":"1","E:\\react\\vio-chats\\src\\Spinner.js":"2","E:\\react\\vio-chats\\src\\registerServiceWorker.js":"3","E:\\react\\vio-chats\\src\\components\\Auth\\Register.js":"4","E:\\react\\vio-chats\\src\\components\\App.js":"5","E:\\react\\vio-chats\\src\\firebase.js":"6","E:\\react\\vio-chats\\src\\components\\Auth\\Login.js":"7","E:\\react\\vio-chats\\src\\actions\\index.js":"8","E:\\react\\vio-chats\\src\\reducers\\index.js":"9","E:\\react\\vio-chats\\src\\components\\ColorPanel\\ColorPanel.js":"10","E:\\react\\vio-chats\\src\\components\\MetaPanel\\MetaPanel.js":"11","E:\\react\\vio-chats\\src\\components\\Messages\\Messages.js":"12","E:\\react\\vio-chats\\src\\components\\SidePanel\\SidePanel.js":"13","E:\\react\\vio-chats\\src\\actions\\types.js":"14","E:\\react\\vio-chats\\src\\components\\Messages\\MessagesHeader.js":"15","E:\\react\\vio-chats\\src\\components\\SidePanel\\UserPanel.js":"16","E:\\react\\vio-chats\\src\\components\\Messages\\Message.js":"17","E:\\react\\vio-chats\\src\\components\\Messages\\MessageForm.js":"18","E:\\react\\vio-chats\\src\\components\\SidePanel\\DirectMessages.js":"19","E:\\react\\vio-chats\\src\\components\\SidePanel\\Channels.js":"20","E:\\react\\vio-chats\\src\\components\\SidePanel\\Starred.js":"21","E:\\react\\vio-chats\\src\\components\\Messages\\ProgressBar.js":"22","E:\\react\\vio-chats\\src\\components\\Messages\\FileModal.js":"23","E:\\react\\vio-chats\\src\\components\\Messages\\Typing.js":"24"},{"size":1747,"mtime":1608631226539,"results":"25","hashOfConfig":"26"},{"size":219,"mtime":1604316064656,"results":"27","hashOfConfig":"26"},{"size":4384,"mtime":1604316064562,"results":"28","hashOfConfig":"26"},{"size":5722,"mtime":1607881678294,"results":"29","hashOfConfig":"26"},{"size":1593,"mtime":1608467151023,"results":"30","hashOfConfig":"26"},{"size":554,"mtime":1604321350905,"results":"31","hashOfConfig":"26"},{"size":3148,"mtime":1604400114669,"results":"32","hashOfConfig":"26"},{"size":920,"mtime":1608466752199,"results":"33","hashOfConfig":"26"},{"size":1660,"mtime":1608467018447,"results":"34","hashOfConfig":"26"},{"size":3622,"mtime":1608635520044,"results":"35","hashOfConfig":"26"},{"size":2913,"mtime":1608312883140,"results":"36","hashOfConfig":"26"},{"size":7479,"mtime":1608635520047,"results":"37","hashOfConfig":"26"},{"size":780,"mtime":1608467327460,"results":"38","hashOfConfig":"26"},{"size":356,"mtime":1608466053906,"results":"39","hashOfConfig":"26"},{"size":1173,"mtime":1608298232784,"results":"40","hashOfConfig":"26"},{"size":5884,"mtime":1608635520052,"results":"41","hashOfConfig":"26"},{"size":1048,"mtime":1608635520045,"results":"42","hashOfConfig":"26"},{"size":7622,"mtime":1608635520045,"results":"43","hashOfConfig":"26"},{"size":3516,"mtime":1608635520050,"results":"44","hashOfConfig":"26"},{"size":7032,"mtime":1608635520048,"results":"45","hashOfConfig":"26"},{"size":2828,"mtime":1608635520051,"results":"46","hashOfConfig":"26"},{"size":418,"mtime":1604402797288,"results":"47","hashOfConfig":"26"},{"size":1684,"mtime":1608033258662,"results":"48","hashOfConfig":"26"},{"size":296,"mtime":1608549332066,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ibv53p",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"E:\\react\\vio-chats\\src\\index.js",[],"E:\\react\\vio-chats\\src\\Spinner.js",[],["100","101"],"E:\\react\\vio-chats\\src\\registerServiceWorker.js",[],"E:\\react\\vio-chats\\src\\components\\Auth\\Register.js",[],"E:\\react\\vio-chats\\src\\components\\App.js",[],"E:\\react\\vio-chats\\src\\firebase.js",[],"E:\\react\\vio-chats\\src\\components\\Auth\\Login.js",[],"E:\\react\\vio-chats\\src\\actions\\index.js",[],"E:\\react\\vio-chats\\src\\reducers\\index.js",[],"E:\\react\\vio-chats\\src\\components\\ColorPanel\\ColorPanel.js",[],"E:\\react\\vio-chats\\src\\components\\MetaPanel\\MetaPanel.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\Messages.js",["102"],"import React from \"react\";\r\nimport { Segment, Comment } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from 'react-redux';\r\nimport { setUserPosts } from '../../actions';\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport Message from \"./Message\";\r\nimport Typing from \"./Typing\";\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    privateMessagesRef: firebase.database().ref(\"privateMessage\"),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    channel: this.props.currentChannel,\r\n    isChannelStarred: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    typingRef: firebase.database().ref('typing'),\r\n    numUniqueUsers: '',\r\n    searchTerm: '',\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingUsers:[],\r\n    connectedRef: firebase.database().ref('.info/connected')\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.addListeners(channel.id);\r\n      this.addUserStarsListener(channel.id,user.uid);\r\n    }\r\n  }\r\n\r\n  addUserStarsListener = (channelId,userId)=>{\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('starred')\r\n      .once('value')\r\n      .then(data =>{\r\n        if(data.val() !==null){\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({isChannelStarred: prevStarred});\r\n        }\r\n      });\r\n  };\r\n\r\n  addListeners = channelId => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addMessageListener = channelId => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessageRef();\r\n    ref.child(channelId).on(\"child_added\", snap => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n  };\r\n\r\n  addTypingListeners=(channelId)=>{\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on('child_added',snap =>{\r\n      if(snap.key !== this.state.user.uid){\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val()\r\n        })\r\n        this.setState({ typingUsers});\r\n      }\r\n    })\r\n    this.state.typingRef.child(channelId).on('child_removed',snap =>{\r\n      const index = typingUsers.findIndex(user => user.id === snap.key);\r\n      if(index !== -1){\r\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\r\n        this.setState({ typingUsers});\r\n      }\r\n      \r\n    })\r\n\r\n    this.state.connectedRef.on('value',snap =>{\r\n      if(snap.val() === true){\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove(err =>{\r\n            if(err !==null){\r\n              console.error(err);\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  countUserPosts = (messages)=>{\r\n    let userPosts = messages.reduce((acc,message)=>{\r\n      if(message.user.name in acc){\r\n        acc[message.user.name].count +=1;\r\n      }else{\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1,\r\n        }\r\n      }\r\n      return acc;\r\n    },{})\r\n    this.props.setUserPosts(userPosts);\r\n  }\r\n\r\n  getMessageRef = () => {\r\n    const { messagesRef,privateMessagesRef,privateChannel} = this.state; \r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  }\r\n\r\n  handleSearchChange = event =>{\r\n    this.setState({\r\n      searchTerm: event.target.value,\r\n      searchLoading: true,\r\n    },()=> this.handleSearchMessage());\r\n  }\r\n\r\n  handleSearchMessage = ()=>{\r\n    const channelMessage = this.state.messages;\r\n    const regex = new RegExp(this.state.searchTerm,'gi');\r\n    const searchResults = channelMessage.reduce((acc,message)=>{\r\n      if(message.content && message.content.match(regex) || message.user.name.match(regex)){\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    },[])\r\n    this.setState({ searchResults})\r\n    setTimeout(()=>this.setState({searchLoading: false}),400);\r\n  };\r\n\r\n  countUniqueUsers = messages =>{\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if(!acc.includes(message.user.name)){\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    },[]);\r\n    const plural = uniqueUsers.length > 1;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\":\"\"}`;\r\n    this.setState({numUniqueUsers});\r\n  }\r\n\r\n  handleStar = () => {\r\n    this.setState(prevState => ({\r\n      isChannelStarred: !prevState.isChannelStarred\r\n    }),()=> this.starredChannel())\r\n  };\r\n\r\n  starredChannel = ()=>{\r\n    if(this.state.isChannelStarred){\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .update({\r\n          [this.state.channel.id]: {\r\n            name: this.state.channel.name,\r\n            details: this.state.channel.details,\r\n            createdBy: {\r\n              name: this.state.channel.createdBy.name,\r\n              avatar: this.state.channel.createdBy.avatar\r\n            }\r\n          }\r\n        });\r\n    }else{\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove(err =>{\r\n          if(err !== null){\r\n            console.log(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  displayMessages = messages =>\r\n    messages.length > 0 &&\r\n    messages.map(message => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n    displayTypingUsers = users =>(\r\n      users.length > 0 && users.map(user =>(\r\n        <div style={{ display:\"flex\", alignItems:\"center\",marginBottom:\"0.2em\"}} key={user.id}>\r\n          <span className=\"user__typing\">{user.name} is typing</span><Typing />\r\n        </div>\r\n      ))\r\n    )\r\n\r\n    displayChannelName = channel => channel ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`:'';\r\n\r\n  render() {\r\n    const { messagesRef, messages, channel, user,searchTerm,\r\n       searchLoading, searchResults, numUniqueUsers,\r\n       privateChannel,isChannelStarred, typingUsers } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader \r\n          channelName = {this.displayChannelName(channel)}\r\n          uniqueUsers = {numUniqueUsers}\r\n          handleSearchChange = {this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          privateChannel={privateChannel}\r\n          handleStar = {this.handleStar}\r\n          isChannelStarred = {isChannelStarred}\r\n        />\r\n\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {searchTerm ? this.displayMessages(searchResults): this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          privateChannel={privateChannel}\r\n          getMessageRef={this.getMessageRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null,{ setUserPosts })(Messages);\r\n","E:\\react\\vio-chats\\src\\components\\SidePanel\\SidePanel.js",[],"E:\\react\\vio-chats\\src\\actions\\types.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\MessagesHeader.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\UserPanel.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\Message.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\MessageForm.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\DirectMessages.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\Channels.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\Starred.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\ProgressBar.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\FileModal.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\Typing.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":35,"column":28,"nodeType":"109","messageId":"110","endLine":35,"endColumn":37},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'listeners' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]