[{"E:\\react\\vio-chats\\src\\index.js":"1","E:\\react\\vio-chats\\src\\Spinner.js":"2","E:\\react\\vio-chats\\src\\registerServiceWorker.js":"3","E:\\react\\vio-chats\\src\\components\\Auth\\Register.js":"4","E:\\react\\vio-chats\\src\\components\\App.js":"5","E:\\react\\vio-chats\\src\\firebase.js":"6","E:\\react\\vio-chats\\src\\components\\Auth\\Login.js":"7","E:\\react\\vio-chats\\src\\actions\\index.js":"8","E:\\react\\vio-chats\\src\\reducers\\index.js":"9","E:\\react\\vio-chats\\src\\components\\ColorPanel\\ColorPanel.js":"10","E:\\react\\vio-chats\\src\\components\\MetaPanel\\MetaPanel.js":"11","E:\\react\\vio-chats\\src\\components\\Messages\\Messages.js":"12","E:\\react\\vio-chats\\src\\components\\SidePanel\\SidePanel.js":"13","E:\\react\\vio-chats\\src\\actions\\types.js":"14","E:\\react\\vio-chats\\src\\components\\Messages\\MessagesHeader.js":"15","E:\\react\\vio-chats\\src\\components\\SidePanel\\UserPanel.js":"16","E:\\react\\vio-chats\\src\\components\\Messages\\Message.js":"17","E:\\react\\vio-chats\\src\\components\\Messages\\MessageForm.js":"18","E:\\react\\vio-chats\\src\\components\\SidePanel\\DirectMessages.js":"19","E:\\react\\vio-chats\\src\\components\\SidePanel\\Channels.js":"20","E:\\react\\vio-chats\\src\\components\\SidePanel\\Starred.js":"21","E:\\react\\vio-chats\\src\\components\\Messages\\ProgressBar.js":"22","E:\\react\\vio-chats\\src\\components\\Messages\\FileModal.js":"23"},{"size":1747,"mtime":1608127180601,"results":"24","hashOfConfig":"25"},{"size":219,"mtime":1604316064656,"results":"26","hashOfConfig":"25"},{"size":4384,"mtime":1604316064562,"results":"27","hashOfConfig":"25"},{"size":5722,"mtime":1607881678294,"results":"28","hashOfConfig":"25"},{"size":1593,"mtime":1608467151023,"results":"29","hashOfConfig":"25"},{"size":554,"mtime":1604321350905,"results":"30","hashOfConfig":"25"},{"size":3148,"mtime":1604400114669,"results":"31","hashOfConfig":"25"},{"size":920,"mtime":1608466752199,"results":"32","hashOfConfig":"25"},{"size":1660,"mtime":1608467018447,"results":"33","hashOfConfig":"25"},{"size":3499,"mtime":1608467976402,"results":"34","hashOfConfig":"25"},{"size":2913,"mtime":1608312883140,"results":"35","hashOfConfig":"25"},{"size":5708,"mtime":1608310797116,"results":"36","hashOfConfig":"25"},{"size":780,"mtime":1608467327460,"results":"37","hashOfConfig":"25"},{"size":356,"mtime":1608466053906,"results":"38","hashOfConfig":"25"},{"size":1173,"mtime":1608298232784,"results":"39","hashOfConfig":"25"},{"size":5685,"mtime":1608486735536,"results":"40","hashOfConfig":"25"},{"size":1016,"mtime":1608118222762,"results":"41","hashOfConfig":"25"},{"size":5441,"mtime":1608489613642,"results":"42","hashOfConfig":"25"},{"size":3392,"mtime":1608196536052,"results":"43","hashOfConfig":"25"},{"size":6616,"mtime":1608220179541,"results":"44","hashOfConfig":"25"},{"size":2828,"mtime":1608302092707,"results":"45","hashOfConfig":"25"},{"size":418,"mtime":1604402797288,"results":"46","hashOfConfig":"25"},{"size":1684,"mtime":1608033258662,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1k9wk56",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\vio-chats\\src\\index.js",[],["96","97"],"E:\\react\\vio-chats\\src\\Spinner.js",[],"E:\\react\\vio-chats\\src\\registerServiceWorker.js",[],"E:\\react\\vio-chats\\src\\components\\Auth\\Register.js",[],"E:\\react\\vio-chats\\src\\components\\App.js",[],"E:\\react\\vio-chats\\src\\firebase.js",[],"E:\\react\\vio-chats\\src\\components\\Auth\\Login.js",[],"E:\\react\\vio-chats\\src\\actions\\index.js",[],"E:\\react\\vio-chats\\src\\reducers\\index.js",[],"E:\\react\\vio-chats\\src\\components\\ColorPanel\\ColorPanel.js",[],"E:\\react\\vio-chats\\src\\components\\MetaPanel\\MetaPanel.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\Messages.js",["98","99"],"import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport { connect } from 'react-redux';\nimport { setUserPosts } from '../../actions';\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  state = {\n    messagesRef: firebase.database().ref(\"messages\"),\n    privateMessagesRef: firebase.database().ref(\"privateMessage\"),\n    messages: [],\n    messagesLoading: true,\n    privateChannel: this.props.isPrivateChannel,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref('users'),\n    numUniqueUsers: '',\n    searchTerm: '',\n    searchLoading: false,\n    searchResults: [],\n  };\n\n  componentDidMount() {\n    const { channel, user } = this.state;\n\n    if (channel && user) {\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id,user.uid);\n    }\n  }\n\n  addUserStarsListener = (channelId,userId)=>{\n    this.state.usersRef\n      .child(userId)\n      .child('starred')\n      .once('value')\n      .then(data =>{\n        if(data.val() !==null){\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({isChannelStarred: prevStarred});\n        }\n      });\n  };\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    const ref = this.getMessageRef();\n    ref.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n  };\n\n  countUserPosts = (messages)=>{\n    let userPosts = messages.reduce((acc,message)=>{\n      if(message.user.name in acc){\n        acc[message.user.name].count +=1;\n      }else{\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1,\n        }\n      }\n      return acc;\n    },{})\n    this.props.setUserPosts(userPosts);\n  }\n\n  getMessageRef = () => {\n    const { messagesRef,privateMessagesRef,privateChannel} = this.state; \n    return privateChannel ? privateMessagesRef : messagesRef;\n  }\n\n  handleSearchChange = event =>{\n    this.setState({\n      searchTerm: event.target.value,\n      searchLoading: true,\n    },()=> this.handleSearchMessage());\n  }\n\n  handleSearchMessage = ()=>{\n    const channelMessage = this.state.messages;\n    const regex = new RegExp(this.state.searchTerm,'gi');\n    const searchResults = channelMessage.reduce((acc,message)=>{\n      if(message.content && message.content.match(regex) || message.user.name.match(regex)){\n        acc.push(message);\n      }\n      return acc;\n    },[])\n    this.setState({ searchResults})\n    setTimeout(()=>this.setState({searchLoading: false}),400);\n  };\n\n  countUniqueUsers = messages =>{\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if(!acc.includes(message.user.name)){\n        acc.push(message.user.name);\n      }\n      return acc;\n    },[]);\n    const plural = uniqueUsers.length > 1;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\":\"\"}`;\n    this.setState({numUniqueUsers});\n  }\n\n  handleStar = () => {\n    this.setState(prevState => ({\n      isChannelStarred: !prevState.isChannelStarred\n    }),()=> this.starredChannel())\n  };\n\n  starredChannel = ()=>{\n    if(this.state.isChannelStarred){\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .update({\n          [this.state.channel.id]: {\n            name: this.state.channel.name,\n            details: this.state.channel.details,\n            createdBy: {\n              name: this.state.channel.createdBy.name,\n              avatar: this.state.channel.createdBy.avatar\n            }\n          }\n        });\n    }else{\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove(err =>{\n          if(err !== null){\n            console.log(err);\n          }\n        });\n    }\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n    displayChannelName = channel => channel ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`:'';\n\n  render() {\n    const { messagesRef, messages, channel, user,searchTerm,\n       searchLoading, searchResults, numUniqueUsers,\n       privateChannel,isChannelStarred } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader \n          channelName = {this.displayChannelName(channel)}\n          uniqueUsers = {numUniqueUsers}\n          handleSearchChange = {this.handleSearchChange}\n          searchLoading={searchLoading}\n          privateChannel={privateChannel}\n          handleStar = {this.handleStar}\n          isChannelStarred = {isChannelStarred}\n        />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {searchTerm ? this.displayMessages(searchResults): this.displayMessages(messages)}\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          privateChannel={privateChannel}\n          getMessageRef={this.getMessageRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null,{ setUserPosts })(Messages);\n","E:\\react\\vio-chats\\src\\components\\SidePanel\\SidePanel.js",[],"E:\\react\\vio-chats\\src\\actions\\types.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\MessagesHeader.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\UserPanel.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\Message.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\MessageForm.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\DirectMessages.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\Channels.js",[],"E:\\react\\vio-chats\\src\\components\\SidePanel\\Starred.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\ProgressBar.js",[],"E:\\react\\vio-chats\\src\\components\\Messages\\FileModal.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":99,"column":26,"nodeType":"106","messageId":"107","endLine":99,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":99,"column":58,"nodeType":"106","messageId":"107","endLine":99,"endColumn":60},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]